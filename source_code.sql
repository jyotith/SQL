create database employee;
use employee;

create table emp_record_table(
    EMP_ID  VARCHAR(100),
    FIRST_NAME  VARCHAR(100),
    LAST_NAME  VARCHAR(100),
    GENDER  VARCHAR(1),
    ROLE  VARCHAR(100),
    DEPT  VARCHAR(100),
    EXP INT,
    COUNTRY VARCHAR(100),
    CONTINENT VARCHAR(100),
    SALARY INT,
    EMP_RATING INT,
    MANAGER_ID  VARCHAR(100), 
    PROJ_ID  VARCHAR(100));
    
LOAD DATA INFILE 'emp_record_table.csv' INTO TABLE emp_record_table
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 LINES
(EMP_ID,FIRST_NAME,LAST_NAME,GENDER,ROLE,DEPT,EXP,COUNTRY,CONTINENT,SALARY,EMP_RATING,MANAGER_ID,PROJ_ID);

SELECT * FROM emp_record_table;


CREATE TABLE Proj_table(
PROJECT_ID  VARCHAR(100),
PROJ_Name VARCHAR(100),
DOMAIN VARCHAR(100),
START_DATE DATETIME,
CLOSURE_DATE DATETIME,
DEV_QTR VARCHAR(100),
STATUS VARCHAR(100));

LOAD DATA INFILE 'Proj_table.csv' INTO TABLE Proj_table
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 LINES
(PROJECT_ID,PROJ_NAME,DOMAIN,@START_DATE,@CLOSURE_DATE,DEV_QTR,STATUS)
set START_DATE=STR_TO_DATE(@START_DATE, '%m-%d-%Y'),
CLOSURE_DATE=STR_TO_DATE(@CLOSURE_DATE, '%m/%d/%Y');

select * from Proj_table;

CREATE TABLE Data_science_team(
EMP_ID  VARCHAR(100),
FIRST_NAME  VARCHAR(100),
LAST_NAME  VARCHAR(100),
GENDER  VARCHAR(1),
ROLE  VARCHAR(100),
DEPT  VARCHAR(100),
EXP INT,
COUNTRY  VARCHAR(100),
CONTINENT  VARCHAR(100));


LOAD DATA INFILE 'data_science_team.csv' INTO TABLE Data_science_team
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 LINES
(EMP_ID,FIRST_NAME,LAST_NAME,GENDER,ROLE,DEPT,EXP,COUNTRY,CONTINENT);

SELECT * FROM Data_science_team;

SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT FROM emp_record_table;

SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT, EMP_RATING FROM emp_record_table
WHERE EMP_RATING < 2; 

SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT, EMP_RATING FROM emp_record_table
WHERE EMP_RATING > 4; 

SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT, EMP_RATING FROM emp_record_table
WHERE EMP_RATING >= 2 AND EMP_RATING <= 4; 

SELECT CONCAT(FIRST_NAME , ' ' , LAST_NAME) AS NAME FROM emp_record_table
WHERE DEPT = 'FINANCE'; 

SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT FROM emp_record_table
WHERE ROLE = 'PRESIDENT'; 

SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT FROM emp_record_table
WHERE ROLE ='MANAGER';

SELECT MANAGER_ID, EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT, ROLE FROM emp_record_table WHERE MANAGER_ID IS NOT NULL
ORDER BY MANAGER_ID;

SELECT MANAGER_ID, COUNT(EMP_ID) FROM emp_record_table WHERE MANAGER_ID IS NOT NULL
GROUP BY MANAGER_ID;

SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT FROM emp_record_table
WHERE DEPT ='HEALTHCARE'
UNION
SELECT EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT FROM emp_record_table
WHERE DEPT ='FINANCE';


SELECT EMP_ID, FIRST_NAME, LAST_NAME, ROLE, A.DEPT, EMP_RATING, B.MAX_EMP_RATING 
FROM emp_record_table AS A INNER JOIN
(SELECT DEPT, MAX(EMP_RATING) AS MAX_EMP_RATING
FROM emp_record_table 
GROUP BY DEPT) AS B ON A.DEPT = B.DEPT;

SELECT ROLE, MAX(SALARY), MIN(SALARY)
FROM emp_record_table 
GROUP BY ROLE;

SELECT EMP_ID, FIRST_NAME, LAST_NAME, ROLE, DEPT, EXP, RANK() OVER (ORDER BY EXP DESC) FROM emp_record_table ; 

CREATE VIEW SALGT6000 AS SELECT * FROM emp_record_table WHERE SALARY>6000; 

SELECT * FROM SALGT6000;

SELECT * FROM emp_record_table WHERE EXP>10;

DELIMITER //
CREATE PROCEDURE EXPGT3()
BEGIN
   SELECT * FROM emp_record_table WHERE EXP > 3;
END //
DELIMITER ;

CALL EXPGT3();

DROP FUNCTION EMPPROFILE;
DELIMITER $$

CREATE FUNCTION EMPPROFILE(
	experience INT
) 
RETURNS VARCHAR(100)
DETERMINISTIC
BEGIN
    DECLARE empprofile VARCHAR(100);

    IF experience <= 2 THEN
		SET empprofile = 'JUNIOR DATA SCIENTIST';
    ELSEIF (experience > 2 AND 
			experience <= 5) THEN
        SET empprofile = 'ASSOCIATE DATA SCIENTIST';
    ELSEIF (experience > 5 AND 
			experience <= 10) THEN
        SET empprofile = 'SENIOR DATA SCIENTIST';
	ELSEIF (experience > 10 AND 
			experience <= 12) THEN
        SET empprofile = 'LEAD DATA SCIENTIST';
    ELSEIF (experience > 12 AND 
			experience <= 16) THEN
        SET empprofile = 'MANAGER';        
    ELSEIF experience > 16 THEN
        SET empprofile = 'PRESIDENT';
    END IF;

	RETURN (empprofile);
END$$

DELIMITER ;
 
SHOW FUNCTION STATUS; 
SELECT EMPPROFILE(2) FROM DUAL;
SELECT EMP_ID, FIRST_NAME, LAST_NAME, ROLE, EMPPROFILE(EXP) FROM emp_record_table ;

CREATE INDEX idx_fname
ON emp_record_table(FIRST_NAME); 

select EMP_ID, FIRST_NAME, LAST_NAME, ROLE, DEPT, SALARY, EMP_RATING, 5*SALARY/100 * EMP_RATING AS BONUS FROM emp_record_table ;

SELECT CONTINENT, COUNTRY, AVG(SALARY) FROM emp_record_table GROUP BY CONTINENT, COUNTRY;